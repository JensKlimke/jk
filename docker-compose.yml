version: '3.8'

services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock:ro
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
    networks:
      - jk-network

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    environment:
      - DEFAULT_EMAIL={EMAIL:-admin@example.com}
    volumes:
      - certs:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - jk-network

  app:
    container_name: app
    build:
      context: .
      dockerfile: packages/apps/app/Dockerfile
      args:
        - API_URL=http://api.${DOMAIN:-localhost}/api
        - WHOIS_URL=http://whois.${DOMAIN:-localhost}/api
    environment:
      - VIRTUAL_HOST=${DOMAIN:-localhost}
      - VIRTUAL_PORT=80
    depends_on:
      - api
    networks:
      - jk-network

  api:
    container_name: api
    build:
      context: .
      dockerfile: packages/services/api/Dockerfile
    depends_on:
      - whois
    networks:
      - jk-network
    environment:
      - NODE_ENV=production
      - VIRTUAL_HOST=${DOMAIN:-localhost}
      - VIRTUAL_PORT=3001

  whois:
    container_name: whois
    build:
      context: .
      dockerfile: packages/services/whois/Dockerfile
    networks:
      - jk-network
    environment:
      - NODE_ENV=production
      - VIRTUAL_HOST=${DOMAIN:-localhost}
      - VIRTUAL_PORT=3002

networks:
  jk-network:
    driver: bridge

volumes:
  html:
  certs:
  acme: