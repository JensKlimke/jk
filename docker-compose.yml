services:
  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - vhost:/etc/nginx/vhost.d
      - conf:/etc/nginx/conf.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
    networks:
      - jk-network

  docker-gen:
    image: nginxproxy/docker-gen
    container_name: nginx-proxy-gen
    command: -notify-sighup nginx-proxy -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes:
      - ./nginx/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
      - vhost:/etc/nginx/vhost.d
      - conf:/etc/nginx/conf.d
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    labels:
      - "com.github.nginx-proxy.docker-gen"
    networks:
      - jk-network

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    environment:
      - DEFAULT_EMAIL=${EMAIL:-admin@example.com}
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - html:/usr/share/nginx/html
      - certs:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - jk-network

  app:
    container_name: app
    build:
      context: .
      dockerfile: packages/apps/app/Dockerfile
      args:
        - API_URL=https://api.${DOMAIN:-localhost}/api
        - WHOIS_URL=https://whois.${DOMAIN:-localhost}/api
    environment:
      - LETSENCRYPT_HOST=${DOMAIN:-localhost}
      - VIRTUAL_HOST=${DOMAIN:-localhost}
      - VIRTUAL_PORT=80
    expose:
      - "80"
    depends_on:
      - api
      - whois
    networks:
      - jk-network

  api:
    container_name: api
    build:
      context: .
      dockerfile: packages/services/api/Dockerfile
    expose:
      - "3001"
    environment:
      - NODE_ENV=production
      - LETSENCRYPT_HOST=api.${DOMAIN:-localhost}
      - VIRTUAL_HOST=api.${DOMAIN:-localhost}
      - VIRTUAL_PORT=3001
    networks:
      - jk-network

  whois:
    container_name: whois
    build:
      context: .
      dockerfile: packages/services/whois/Dockerfile
    expose:
      - "3002"
    environment:
      - NODE_ENV=production
      - LETSENCRYPT_HOST=whois.${DOMAIN:-localhost}
      - VIRTUAL_HOST=whois.${DOMAIN:-localhost}
      - VIRTUAL_PORT=3002
    networks:
      - jk-network

networks:
  jk-network:
    driver: bridge

volumes:
  html:
  certs:
  acme:
  vhost:
  conf: